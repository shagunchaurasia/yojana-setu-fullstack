const Joi = require("joi");

const JoiSchemas = {
  schemeSchema: Joi.object().keys({
    schemeName: Joi.string().required().max(200),
    slug: Joi.string(),
    description: Joi.string().required(),
    detailedDescription: Joi.string(),
    relatedWebsite: Joi.string(),
    emailSupport: Joi.string(),
    statesImplementedIn: Joi.string(),
    location: Joi.any(),
    additionalWebsites: Joi.any(),
    schemeType: Joi.any(),
    averageRating: Joi.string(),
    categoryId: Joi.string(),
    modifiedOn: Joi.string(),
    relatedImage: Joi.any(),
    addedOn: Joi.string(),
    modifiedBy: Joi.string(),
    addedBy: Joi.string(),
    reviewer: Joi.string(),
    reviewState: Joi.string().valid('UnAssigned', 'Pending', 'Approved', 'Rejected'),
    reviewNotes: Joi.string()
  }),
  userSchema: Joi.object().keys({
    userEmail: Joi.string().required(),
  }),
  schemeTypeSchema: Joi.object().keys({
    name: Joi.string().required().max(200),
    commonName: Joi.string().required().max(200),
    alternateName: Joi.string().max(200),
    isGovt: Joi.boolean().default(false),
    urlSlug: Joi.string(),
    description: Joi.string().max(200),
    detailedDescription: Joi.string().max(200),
    relatedImage: Joi.string(),
    addedOn: Joi.string().max(200),
    addedBy: Joi.string().max(200),
    modifiedOn: Joi.string().max(200),
    modifiedBy: Joi.string().max(200),
    status: Joi.string().max(200),  
  }),
  schemeTypeIdSchema: Joi.object().keys({
    schemeTypeId: Joi.string().required(),
  }),
  stateSchema: Joi.object().keys({
    name: Joi.string().required().max(200),
    commonName: Joi.string().required().max(200),
    alternateName: Joi.string().max(200),
    urlSlug: Joi.string(),
    description: Joi.string().max(200),
    detailedDescription: Joi.string().max(200),
    relatedImage: Joi.string(),
    addedOn: Joi.string().max(200),
    addedBy: Joi.string().max(200),
    modifiedOn: Joi.string().max(200),
    modifiedBy: Joi.string().max(200),
    status: Joi.string().max(200),  
  }),
  stateIdSchema: Joi.object().keys({
    stateId: Joi.string().required(),
  }),
  citySchema: Joi.object().keys({
    name: Joi.string().required().max(200),
    stateId: Joi.string().required(),
    commonName: Joi.string().required().max(200),
    alternateName: Joi.string().max(200),
    urlSlug: Joi.string(),
    description: Joi.string().max(200),
    detailedDescription: Joi.string().max(200),
    relatedImage: Joi.string(),
    addedOn: Joi.string().max(200),
    addedBy: Joi.string().max(200),
    modifiedOn: Joi.string().max(200),
    modifiedBy: Joi.string().max(200),
    status: Joi.string().max(200),  
  }),
  cityIdSchema: Joi.object().keys({
    cityId: Joi.string().required(),
  }),
  userTypeSchema: Joi.object().keys({
    name: Joi.string().required().max(200),
    gender: Joi.string().required().max(50),
    isChild: Joi.boolean().default(false),
    isHandicapped: Joi.boolean().default(false),
    isWidowed: Joi.boolean().default(false),
    isPoor: Joi.boolean().default(false),
    isSC: Joi.boolean().default(false),
    isST: Joi.boolean().default(false),
    isOBC: Joi.boolean().default(false),
    isGovtEmployee: Joi.boolean().default(false),
    isUnEmployed: Joi.boolean().default(false),
    isOld: Joi.boolean().default(false),
    commonName: Joi.string().required().max(200),
    alternateName: Joi.string().max(200),
    urlSlug: Joi.string(),
    description: Joi.string().max(200),
    detailedDescription: Joi.string().max(200),
    relatedImage: Joi.string(),
    addedOn: Joi.string().max(200),
    addedBy: Joi.string().max(200),
    modifiedOn: Joi.string().max(200),
    modifiedBy: Joi.string().max(200),
    status: Joi.string().max(200),  
  }),
  userTypeIdSchema: Joi.object().keys({
    userTypeId: Joi.string().required(),
  }),
  mailTemplateSchema: Joi.object().keys({
    templateName: Joi.string().max(200),
    mailTo: Joi.string().max(200),
    mailCC: Joi.string().max(200),
    mailBCC: Joi.string().max(200),
    attachment: Joi.string().max(200),
    addedDate: Joi.string().max(200),
    subject: Joi.string().max(200),
    mailBody: Joi.string().max(2000),
    status: Joi.string().max(200),
    signature: Joi.string().max(200)
  }),
  mailIdSchema: Joi.object().keys({
    mailId: Joi.string().required(),
  }),
  updateLogSchema: Joi.object().keys({
    name: Joi.string().required().max(200),
    description: Joi.string().max(200),
    addedBy: Joi.string().max(200),
    timeLog: Joi.string(),
  }),
};

module.exports = JoiSchemas;
